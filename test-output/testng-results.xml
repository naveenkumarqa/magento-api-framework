<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-02T18:39:52 IST" name="Magneto-Cart-API-Sanity-Suite" finished-at="2025-08-02T18:40:01 IST" duration-ms="8986">
    <groups>
      <group name="sanity">
        <method signature="CartFlowTest.testCreateCart()[pri:1, instance:api.testCases.CartFlowTest@1d131e1b]" name="testCreateCart" class="api.testCases.CartFlowTest"/>
        <method signature="CustomerFlowTest.testCreateCustomer()[pri:1, instance:api.testCases.CustomerFlowTest@7216fb24]" name="testCreateCustomer" class="api.testCases.CustomerFlowTest"/>
        <method signature="CartFlowTest.testAddItemToCart()[pri:2, instance:api.testCases.CartFlowTest@1d131e1b]" name="testAddItemToCart" class="api.testCases.CartFlowTest"/>
        <method signature="CustomerFlowTest.testGenerateCustomerToken()[pri:2, instance:api.testCases.CustomerFlowTest@7216fb24]" name="testGenerateCustomerToken" class="api.testCases.CustomerFlowTest"/>
        <method signature="CartFlowTest.testViewCartItems()[pri:3, instance:api.testCases.CartFlowTest@1d131e1b]" name="testViewCartItems" class="api.testCases.CartFlowTest"/>
        <method signature="CustomerFlowTest.testGetCustomerDetails()[pri:3, instance:api.testCases.CustomerFlowTest@7216fb24]" name="testGetCustomerDetails" class="api.testCases.CustomerFlowTest"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2025-08-02T18:39:52 IST" name="Magneto-Cart-API-Sanity-Suite" finished-at="2025-08-02T18:40:01 IST" duration-ms="8986">
      <class name="api.testCases.CustomerFlowTest">
        <test-method is-config="true" signature="setUpSuite()[pri:0, instance:api.testCases.CustomerFlowTest@7216fb24]" started-at="2025-08-02T18:39:46 IST" name="setUpSuite" finished-at="2025-08-02T18:39:52 IST" duration-ms="5261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSuite -->
        <test-method is-config="true" signature="configureRestAssured()[pri:0, instance:api.testCases.CustomerFlowTest@7216fb24]" started-at="2025-08-02T18:39:52 IST" name="configureRestAssured" finished-at="2025-08-02T18:39:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureRestAssured -->
        <test-method is-config="true" signature="logStart(java.lang.reflect.Method)[pri:0, instance:api.testCases.CustomerFlowTest@7216fb24]" started-at="2025-08-02T18:39:52 IST" name="logStart" finished-at="2025-08-02T18:39:52 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void api.testCases.CustomerFlowTest.testCreateCustomer() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStart -->
        <test-method signature="testCreateCustomer()[pri:1, instance:api.testCases.CustomerFlowTest@7216fb24]" started-at="2025-08-02T18:39:52 IST" name="testCreateCustomer" finished-at="2025-08-02T18:39:54 IST" duration-ms="2398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateCustomer -->
        <test-method is-config="true" signature="logEnd(java.lang.reflect.Method)[pri:0, instance:api.testCases.CustomerFlowTest@7216fb24]" started-at="2025-08-02T18:39:54 IST" name="logEnd" finished-at="2025-08-02T18:39:54 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void api.testCases.CustomerFlowTest.testCreateCustomer() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEnd -->
        <test-method is-config="true" signature="logStart(java.lang.reflect.Method)[pri:0, instance:api.testCases.CustomerFlowTest@7216fb24]" started-at="2025-08-02T18:39:54 IST" name="logStart" finished-at="2025-08-02T18:39:54 IST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void api.testCases.CustomerFlowTest.testGenerateCustomerToken() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStart -->
        <test-method signature="testGenerateCustomerToken()[pri:2, instance:api.testCases.CustomerFlowTest@7216fb24]" started-at="2025-08-02T18:39:54 IST" name="testGenerateCustomerToken" finished-at="2025-08-02T18:39:55 IST" duration-ms="1294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateCustomerToken -->
        <test-method is-config="true" signature="logEnd(java.lang.reflect.Method)[pri:0, instance:api.testCases.CustomerFlowTest@7216fb24]" started-at="2025-08-02T18:39:55 IST" name="logEnd" finished-at="2025-08-02T18:39:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void api.testCases.CustomerFlowTest.testGenerateCustomerToken() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEnd -->
        <test-method is-config="true" signature="logStart(java.lang.reflect.Method)[pri:0, instance:api.testCases.CustomerFlowTest@7216fb24]" started-at="2025-08-02T18:39:55 IST" name="logStart" finished-at="2025-08-02T18:39:55 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void api.testCases.CustomerFlowTest.testGetCustomerDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStart -->
        <test-method signature="testGetCustomerDetails()[pri:3, instance:api.testCases.CustomerFlowTest@7216fb24]" started-at="2025-08-02T18:39:55 IST" name="testGetCustomerDetails" finished-at="2025-08-02T18:39:57 IST" duration-ms="1717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCustomerDetails -->
        <test-method is-config="true" signature="logEnd(java.lang.reflect.Method)[pri:0, instance:api.testCases.CustomerFlowTest@7216fb24]" started-at="2025-08-02T18:39:57 IST" name="logEnd" finished-at="2025-08-02T18:39:57 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void api.testCases.CustomerFlowTest.testGetCustomerDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEnd -->
      </class> <!-- api.testCases.CustomerFlowTest -->
      <class name="api.testCases.CartFlowTest">
        <test-method is-config="true" signature="configureRestAssured()[pri:0, instance:api.testCases.CartFlowTest@1d131e1b]" started-at="2025-08-02T18:39:57 IST" name="configureRestAssured" finished-at="2025-08-02T18:39:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureRestAssured -->
        <test-method is-config="true" signature="logStart(java.lang.reflect.Method)[pri:0, instance:api.testCases.CartFlowTest@1d131e1b]" started-at="2025-08-02T18:39:57 IST" name="logStart" finished-at="2025-08-02T18:39:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void api.testCases.CartFlowTest.testCreateCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStart -->
        <test-method signature="testCreateCart()[pri:1, instance:api.testCases.CartFlowTest@1d131e1b]" started-at="2025-08-02T18:39:57 IST" name="testCreateCart" finished-at="2025-08-02T18:39:58 IST" duration-ms="1235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateCart -->
        <test-method is-config="true" signature="logEnd(java.lang.reflect.Method)[pri:0, instance:api.testCases.CartFlowTest@1d131e1b]" started-at="2025-08-02T18:39:58 IST" name="logEnd" finished-at="2025-08-02T18:39:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void api.testCases.CartFlowTest.testCreateCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEnd -->
        <test-method is-config="true" signature="logStart(java.lang.reflect.Method)[pri:0, instance:api.testCases.CartFlowTest@1d131e1b]" started-at="2025-08-02T18:39:58 IST" name="logStart" finished-at="2025-08-02T18:39:58 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void api.testCases.CartFlowTest.testAddItemToCart() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStart -->
        <test-method signature="testAddItemToCart()[pri:2, instance:api.testCases.CartFlowTest@1d131e1b]" started-at="2025-08-02T18:39:58 IST" name="testAddItemToCart" finished-at="2025-08-02T18:40:00 IST" duration-ms="1362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddItemToCart -->
        <test-method is-config="true" signature="logEnd(java.lang.reflect.Method)[pri:0, instance:api.testCases.CartFlowTest@1d131e1b]" started-at="2025-08-02T18:40:00 IST" name="logEnd" finished-at="2025-08-02T18:40:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void api.testCases.CartFlowTest.testAddItemToCart() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEnd -->
        <test-method is-config="true" signature="logStart(java.lang.reflect.Method)[pri:0, instance:api.testCases.CartFlowTest@1d131e1b]" started-at="2025-08-02T18:40:00 IST" name="logStart" finished-at="2025-08-02T18:40:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void api.testCases.CartFlowTest.testViewCartItems()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logStart -->
        <test-method signature="testViewCartItems()[pri:3, instance:api.testCases.CartFlowTest@1d131e1b]" started-at="2025-08-02T18:40:00 IST" name="testViewCartItems" finished-at="2025-08-02T18:40:01 IST" duration-ms="890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testViewCartItems -->
        <test-method is-config="true" signature="logEnd(java.lang.reflect.Method)[pri:0, instance:api.testCases.CartFlowTest@1d131e1b]" started-at="2025-08-02T18:40:01 IST" name="logEnd" finished-at="2025-08-02T18:40:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void api.testCases.CartFlowTest.testViewCartItems()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logEnd -->
      </class> <!-- api.testCases.CartFlowTest -->
    </test> <!-- Magneto-Cart-API-Sanity-Suite -->
  </suite> <!-- Magneto-Cart-API-Sanity-Suite -->
</testng-results>
